function init() {
    d3.json("/api/v1/data/variables").then(function(data) {
        create_data_entry(data);
    });

    create_predefined_options();
};

function create_data_entry(data) {
    // Filter data for items of type "Categorical"
    const categoricalData = data.filter(item => item.role === "Feature");
  
    // Select the container element (you may want to replace 'categories' with your actual container ID or selector)
    const container = d3.select("#categories");
  
    // Create labels and dropdowns within the container
    const dropdowns = container
      .selectAll(".categorical-item")
      .data(categoricalData)
      .enter()
      .append("div")
      .attr("class", d => `categorical-item ${d.name}`); // Add class based on label name
  
    dropdowns
      .append("label")
      .text(d => d.name.charAt(0).toUpperCase() + d.name.slice(1) + ": ");
  
    dropdowns
      .append("select")
      .selectAll("option")
      .data(d => {
        // Check if description is null or undefined before splitting
        const options = d.description ? d.description.split(",") : [];
        // Add <unknown> as the first option
        options.unshift("<unknown>");
        return options;
      })
      .enter()
      .append("option")
      .text(d => {
        // Check if the item has the format key=value before displaying
        const parts = d.split("=");
        return parts.length === 2 ? parts[0] : d;
      })
      .attr("value", d => {
        // Check if the item has the format key=value before setting value
        const parts = d.split("=");
        return parts.length === 2 ? parts[1] : d;
      });
  }
  

  

function is_edible() {
    const selectedValues = {};
  
    d3.selectAll(".categorical-item select").each(function() {
        const label = d3.select(this.parentNode).select("label").text().trim().replace(':', '').toLowerCase();
 // Convert label to lowercase
        const value = d3.select(this).property("value");
        selectedValues[label] = value;
    });

    // Now 'selectedValues' is an object where the keys are the lowercase labels, and the values are the selected dropdown values.
    // console.log(selectedValues);
    
    fetch('/api/v1/machine-learning/predict', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(selectedValues),
      })
      .then(response => response.json())
      .then(data => {
        // Handle the response from the API
        const prediction = data.prediction; // Assuming your API returns a 'prediction' field
        // alert(`Prediction: ${prediction}`);
        console.log(`Prediction: ${prediction}`);
        const results = d3.select('#results-graphic');
        const disclaimer = d3.select('#disclaimer');
        const results_text = d3.select('#results-text')
        const disclaimerText = "**Disclaimer: Mushroom Edibility Prediction**<br><br>" +
        "The mushroom edibility predictions provided on this website are generated by a machine-learning model based on available data. It's important to understand that the predictions made by this model are based on statistical analysis and historical data and should not be considered as professional advice.<br><br>" +
        "<strong>Caution:</strong><br><br>" +
        "1. <strong>Use as a Reference:</strong> The predictions are intended for informational purposes only and should be used as a reference. They are not a substitute for expert knowledge in mycology or professional advice.<br><br>" +
        "2. <strong>Human Safety:</strong> Mushroom foraging can be dangerous, as some poisonous mushrooms may closely resemble edible ones. If you intend to consume wild mushrooms, we strongly recommend seeking guidance from experienced mycologists, consulting field guides, or participating in formal mushroom identification classes.<br><br>" +
        "3. <strong>Errors and Limitations:</strong> While the model has been designed with care, it may have limitations, and the predictions may not always be accurate. Never solely rely on the model's predictions for your safety or dietary choices.<br><br>" +
        "4. <strong>Environmental Impact:</strong> Harvesting wild mushrooms may also have environmental consequences. Respect local regulations and the environment when foraging.<br><br>" +
        "5. <strong>Children and Pets:</strong> Be aware that the edibility of mushrooms can vary between species, and some mushrooms can be toxic to pets. Keep children and pets away from wild mushrooms.<br><br>" +
        "By using this website, you acknowledge that you have read and understood this disclaimer and agree to use the information provided responsibly and at your own risk. Always exercise caution and seek professional guidance when in doubt. The creators of this website assume no responsibility for any actions taken based on the predictions and information provided herein.";

        results.html('');
        disclaimer.html('');
        results_text.html('');

        if (prediction < .5) {
          results.append('img')
            .attr('src', '/static/assets/poisonous.png')
            .attr('alt', 'Not Recommended');

          results_text.append('p')
            .text("Uh-oh! Better stay away!")

          disclaimer.append('p')
            .html(disclaimerText);
        } 
        else if (prediction > .8){
          results.append('img')
            .attr('src', '/static/assets/edible.png')
            .attr('alt', 'Most likely edible');
          
          results_text.append('p')
            .text('Seems safe to consume!')
          
          disclaimer.append('p')
            .html(disclaimerText);
        }
        else if (prediction >= .5){
          results.append('img')
            .attr('src', '/static/assets/confused.png')
            .attr('alt', 'Not sure. Probably shouldnt consume.');
          results_text.append('p')
            .text("Not sure! I wouldn't recommend consuming it!")
          disclaimer.append('p')
            .html(disclaimerText);
        }
        else {
          results.append('img')
            .attr('src', '/static/assets/confused.png')
            .attr('alt', 'Nothing entered.');
          results_text.append('p')
            .text("I'm confused! You didn't enter anything!")
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Error occurred while predicting edibility.');
      });
}

function create_predefined_options() {
    // Create an array of mushroom types with associated image file names
    const mushroomTypes = [
      { name: "Portabella Mushrooms", image: "Portobello_mushrooms.jpg" },
      { name: "Chanterelle Mushrooms", image: "Cantharellus_cibarius.jpg" },
      { name: "Shiitake Mushrooms", image: "Shiitakegrowing.jpg" },
      { name: "Oyster Mushrooms", image: "oyster_mushrooms.jpg" },
      { name: "Enoki Mushrooms", image: "enoki.jpg" },
      { name: "Death Cap Mushrooms", image: "Death_cap.jpg" },
      { name: "Fly Agaric Mushrooms", image: "fly_agaric.jpg" }
    ];
  
    // Select the container div using D3
    const container = d3.select("#predefined_mushrooms");
  
    // Create buttons and append them to the container
    container
      .selectAll(".mushroom-button")
      .data(mushroomTypes)
      .enter()
      .append("div")
      .attr("class", "mushroom-button")
      .style("background-image", d => `url('/static/assets/${d.image}')`)
      .text(d => d.name)
      .on("click", function() {
        const mushroomType = this.textContent; // Get the text content of the clicked button
        console.log(`Button clicked for ${mushroomType}`);
        predefined_buttons(mushroomType); // Pass the text content to predefined_buttons
      });
  }

function predefined_buttons(mushroomType) {
    const mushroomData = {
      "Portabella Mushrooms": {
        'Cap-shape': 'x',
        'Cap-surface': 's',
        'Cap-color': 'n',
        'Bruises': 't',
        'Odor': 'l',
        'Gill-attachment': 'a',
        'Gill-spacing': 'w',
        'Gill-size': 'b',
        'Gill-color': 'n',
        'Stalk-shape': 'e',
        'Stalk-root': 'r',
        'Stalk-surface-above-ring': 's',
        'Stalk-surface-below-ring': 's',
        'Stalk-color-above-ring': 'n',
        'Stalk-color-below-ring': 'n',
        'Veil-type': 'p',
        'Veil-color': 'w',
        'Ring-number': 'o',
        'Ring-type': 'p',
        'Spore-print-color': 'b',
        'Population': 'n',
        'Habitat': 'd'
      },
      "Chanterelle Mushrooms": {
        'Cap-shape': 'x',
        'Cap-surface': 's',
        'Cap-color': 'y',  
        'Bruises': 'f',   
        'Odor': 'l',
        'Gill-attachment': 'a',
        'Gill-spacing': 'd', 
        'Gill-size': 'b',
        'Gill-color': 'o',  
        'Stalk-shape': 'e',
        'Stalk-root': '?',  
        'Stalk-surface-above-ring': 's',
        'Stalk-surface-below-ring': 's',
        'Stalk-color-above-ring': 'y',  
        'Stalk-color-below-ring': 'y', 
        'Veil-type': 'p',
        'Veil-color': 'w',
        'Ring-number': 'n',  
        'Ring-type': 'n',   
        'Spore-print-color': 'y',  
        'Population': 'n',
        'Habitat': 'd'
      },
      "Shiitake Mushrooms": {
        'Cap-shape': 'x',
        'Cap-surface': 'f',
        'Cap-color': 'n',
        'Bruises': 'f',    
        'Odor': 'm',       
        'Gill-attachment': 'a',
        'Gill-spacing': 'c', 
        'Gill-size': 'b',
        'Gill-color': 'w',
        'Stalk-shape': 'e',
        'Stalk-root': 'r',
        'Stalk-surface-above-ring': 'k', 
        'Stalk-surface-below-ring': 'k',
        'Stalk-color-above-ring': 'n',
        'Stalk-color-below-ring': 'n',
        'Veil-type': 'p',
        'Veil-color': 'w',
        'Ring-number': 'o',  
        'Ring-type': 'p',
        'Spore-print-color': 'b',
        'Population': 'n',
        'Habitat': 'd'      
      },
      "Oyster Mushrooms": {
        'Cap-shape': 'f',
        'Cap-surface': 's',
        'Cap-color': 'w',
        'Bruises': 'f',   
        'Odor': 'a',     
        'Gill-attachment': 'a',
        'Gill-spacing': 'c', 
        'Gill-size': 'b',
        'Gill-color': 'w',
        'Stalk-shape': 'e',
        'Stalk-root': 'r',
        'Stalk-surface-above-ring': 's',
        'Stalk-surface-below-ring': 's',
        'Stalk-color-above-ring': 'w',
        'Stalk-color-below-ring': 'w',
        'Veil-type': 'p',
        'Veil-color': 'w',
        'Ring-number': 'n', 
        'Ring-type': 'n',   
        'Spore-print-color': 'w',
        'Population': 'n',
        'Habitat': 'd'     
      },
      "Enoki Mushrooms": {
        'Cap-shape': 'c',   // Change to 'c' for conical
        'Cap-surface': 's',
        'Cap-color': 'w',
        'Bruises': 'f',     // Change to 'f' for no
        'Odor': 'n',        // Change to 'n' for none
        'Gill-spacing': 'c', // Change to 'c' for crowded
        'Gill-size': 'n',    // Change to 'n' for narrow
        'Gill-color': 'w',
        'Stalk-shape': 't',  // Change to 't' for tapering
        'Stalk-root': 'r',
        'Stalk-surface-above-ring': 's',
        'Stalk-surface-below-ring': 's',
        'Stalk-color-above-ring': 'w',
        'Stalk-color-below-ring': 'w',
        'Veil-type': 'p',
        'Veil-color': 'w',
        'Ring-number': 'n',  // Change to 'n' for none
        'Ring-type': 'n',    // Change to 'n' for none
        'Spore-print-color': 'w',
        'Population': 'n',
        'Habitat': 'd'       // Change to 'd' for woods
      },
      "Death Cap Mushrooms": {
        'Cap-shape': 'x',   
        'Cap-surface': 's', 
        'Cap-color': 'r',   
        'Bruises': 't',
        'Odor': 'l',       
        'Gill-attachment': 'f',
        'Gill-spacing': 'w', 
        'Gill-size': 'n',    
        'Gill-color': 'w',
        'Stalk-shape': 't',  
        'Stalk-root': 'b',   
        'Stalk-surface-above-ring': 's',
        'Stalk-surface-below-ring': 'y',
        'Stalk-color-above-ring': 'y',  
        'Stalk-color-below-ring': 'y',  
        'Veil-type': 'p',
        'Veil-color': 'w',
        'Ring-number': 'o',   
        'Ring-type': 's',     
        'Spore-print-color': 'w',
        'Population': 'v',    
        'Habitat': 'd'        
      },
      "Fly Agaric Mushrooms": {
        'Cap-shape': 'x',   
        'Cap-surface': 's', 
        'Cap-color': 'e',   
        'Bruises': 'f',
        'Odor': 'f',       
        'Gill-attachment': 'f',
        'Gill-spacing': 'w', 
        'Gill-size': 'n',    
        'Gill-color': 'w',
        'Stalk-shape': 't',  
        'Stalk-root': 'b',   
        'Stalk-surface-above-ring': 's',
        'Stalk-surface-below-ring': 'y',
        'Stalk-color-above-ring': 'w',  
        'Stalk-color-below-ring': 'w',  
        'Veil-type': 'u',
        'Veil-color': 'w',
        'Ring-number': 't',   
        'Ring-type': 'z',     
        'Spore-print-color': 'w',
        'Population': 'c',    
        'Habitat': 'd'        
      }
    };
  
    if (mushroomData[mushroomType]) {
      const mushroomValues = mushroomData[mushroomType];
  
      for (const category in mushroomValues) {
        const value = mushroomValues[category];
        d3.select(`.${category.toLowerCase()} select`)
          .property('value', value);
      }
    }
  }
  



init();
